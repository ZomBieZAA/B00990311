import"./index-a0afce76.js";function m(t,e){return e>1023?t*Math.pow(2,1023)*Math.pow(2,e-1023):e<-1074?t*Math.pow(2,-1074)*Math.pow(2,e+1074):t*Math.pow(2,e)}function p(t,e,a,i,l,n){l>0?(l=m(1,l-(128+8)),t[n+0]=e*l,t[n+1]=a*l,t[n+2]=i*l):(t[n+0]=0,t[n+1]=0,t[n+2]=0)}function g(t,e){let a="",i="";for(let l=e;l<t.length-e&&(i=String.fromCharCode(t[l]),i!=`
`);l++)a+=i;return a}function D(t){let e=0,a=0,i=g(t,0);if(i[0]!="#"||i[1]!="?")throw"Bad HDR Format.";let l=!1,n=!1,o=0;do o+=i.length+1,i=g(t,o),i=="FORMAT=32-bit_rle_rgbe"?n=!0:i.length==0&&(l=!0);while(!l);if(!n)throw"HDR Bad header format, unsupported FORMAT";o+=i.length+1,i=g(t,o);const r=/^-Y (.*) \+X (.*)$/g.exec(i);if(!r||r.length<3)throw"HDR Bad header format, no size";if(a=parseInt(r[2]),e=parseInt(r[1]),a<8||a>32767)throw"HDR Bad header format, unsupported size";return o+=i.length+1,{height:e,width:a,dataPosition:o}}function b(t,e){return _(t,e)}function _(t,e){let a=e.height;const i=e.width;let l,n,o,c,r,s=e.dataPosition,f=0,d=0,h=0;const B=new ArrayBuffer(i*4),w=new Uint8Array(B),A=new ArrayBuffer(e.width*e.height*4*3),u=new Float32Array(A);for(;a>0;){if(l=t[s++],n=t[s++],o=t[s++],c=t[s++],l!=2||n!=2||o&128||e.width<8||e.width>32767)return H(t,e);if((o<<8|c)!=i)throw"HDR Bad header format, wrong scan line width";for(f=0,h=0;h<4;h++)for(d=(h+1)*i;f<d;)if(l=t[s++],n=t[s++],l>128){if(r=l-128,r==0||r>d-f)throw"HDR Bad Format, bad scanline data (run)";for(;r-- >0;)w[f++]=n}else{if(r=l,r==0||r>d-f)throw"HDR Bad Format, bad scanline data (non-run)";if(w[f++]=n,--r>0)for(let R=0;R<r;R++)w[f++]=t[s++]}for(h=0;h<i;h++)l=w[h],n=w[h+i],o=w[h+2*i],c=w[h+3*i],p(u,l,n,o,c,(e.height-a)*i*3+h*3);a--}return u}function H(t,e){let a=e.height;const i=e.width;let l,n,o,c,r,s=e.dataPosition;const f=new ArrayBuffer(e.width*e.height*4*3),d=new Float32Array(f);for(;a>0;){for(r=0;r<e.width;r++)l=t[s++],n=t[s++],o=t[s++],c=t[s++],p(d,l,n,o,c,(e.height-a)*i*3+r*3);a--}return d}class M{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(e,a,i){const l=new Uint8Array(e.buffer,e.byteOffset,e.byteLength),n=D(l),o=b(l,n),c=n.width*n.height,r=new Float32Array(c*4);for(let s=0;s<c;s+=1)r[s*4]=o[s*3],r[s*4+1]=o[s*3+1],r[s*4+2]=o[s*3+2],r[s*4+3]=1;i(n.width,n.height,a.generateMipMaps,!1,()=>{const s=a.getEngine();a.type=1,a.format=5,a._gammaSpace=!1,s._uploadDataToTextureDirectly(a,r)})}}export{M as _HDRTextureLoader};
